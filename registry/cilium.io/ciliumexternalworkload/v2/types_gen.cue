// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni vendor crd -f crds.yaml

package v2

import "strings"

// CiliumExternalWorkload is a Kubernetes Custom Resource that
// contains a specification for an external workload that can
// join the cluster. The name of the CRD is the FQDN of the
// external workload, and it needs to match the name in the
// workload registration. The labels on the CRD object are the
// labels that will be used to allocate a Cilium Identity for the
// external workload. If 'io.kubernetes.pod.namespace' or
// 'io.kubernetes.pod.name' labels are not explicitly specified,
// they will be defaulted to 'default' and <workload name>,
// respectively. 'io.cilium.k8s.policy.cluster' will always be
// defined as the name of the current cluster, which defaults to
// "default".
#CiliumExternalWorkload: {
	// APIVersion defines the versioned schema of this representation
	// of an object. Servers should convert recognized schemas to the
	// latest internal value, and may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "cilium.io/v2"

	// Kind is a string value representing the REST resource this
	// object represents. Servers may infer this from the endpoint
	// the client submits requests to. Cannot be updated. In
	// CamelCase. More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "CiliumExternalWorkload"
	metadata: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace?: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// Spec is the desired configuration of the external Cilium
	// workload.
	spec!: #CiliumExternalWorkloadSpec
}

// Spec is the desired configuration of the external Cilium
// workload.
#CiliumExternalWorkloadSpec: {
	// IPv4AllocCIDR is the range of IPv4 addresses in the CIDR format
	// that the external workload can use to allocate IP addresses
	// for the tunnel device and the health endpoint.
	"ipv4-alloc-cidr"?: =~"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\/([0-9]|[1-2][0-9]|3[0-2])$"

	// IPv6AllocCIDR is the range of IPv6 addresses in the CIDR format
	// that the external workload can use to allocate IP addresses
	// for the tunnel device and the health endpoint.
	"ipv6-alloc-cidr"?: =~"^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$"
}
