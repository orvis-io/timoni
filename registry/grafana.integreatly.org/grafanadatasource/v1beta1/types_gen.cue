// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni vendor crd -f crds.yaml

package v1beta1

import "strings"

// GrafanaDatasource is the Schema for the grafanadatasources API
#GrafanaDatasource: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "grafana.integreatly.org/v1beta1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "GrafanaDatasource"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// GrafanaDatasourceSpec defines the desired state of
	// GrafanaDatasource
	spec!: #GrafanaDatasourceSpec
}

// GrafanaDatasourceSpec defines the desired state of
// GrafanaDatasource
#GrafanaDatasourceSpec: {
	// allow to import this resources from an operator in a different
	// namespace
	allowCrossNamespaceImport?: bool
	datasource: {
		access?:        string
		basicAuth?:     bool
		basicAuthUser?: string
		database?:      string

		// Deprecated field, it has no effect
		editable?:  bool
		isDefault?: bool
		jsonData?: {
			...
		}
		name?: string

		// Deprecated field, it has no effect
		orgId?: int
		secureJsonData?: {
			...
		}
		type?: string
		uid?:  string
		url?:  string
		user?: string
	}

	// selects Grafana instances for import
	instanceSelector: {
		// matchExpressions is a list of label selector requirements. The
		// requirements are ANDed.
		matchExpressions?: [...{
			// key is the label key that the selector applies to.
			key: string

			// operator represents a key's relationship to a set of values.
			// Valid operators are In, NotIn, Exists and DoesNotExist.
			operator: string

			// values is an array of string values. If the operator is In or
			// NotIn,
			// the values array must be non-empty. If the operator is Exists
			// or DoesNotExist,
			// the values array must be empty. This array is replaced during a
			// strategic
			// merge patch.
			values?: [...string]
		}]

		// matchLabels is a map of {key,value} pairs. A single {key,value}
		// in the matchLabels
		// map is equivalent to an element of matchExpressions, whose key
		// field is "key", the
		// operator is "In", and the values array contains only "value".
		// The requirements are ANDed.
		matchLabels?: {
			[string]: string
		}
	}

	// plugins
	plugins?: [...{
		name:    string
		version: string
	}]

	// how often the datasource is refreshed, defaults to 5m if not
	// set
	resyncPeriod?: =~"^([0-9]+(\\.[0-9]+)?(ns|us|Âµs|ms|s|m|h))+$" | *"5m"

	// environments variables from secrets or config maps
	valuesFrom?: [...{
		targetPath: string
		valueFrom: {
			// Selects a key of a ConfigMap.
			configMapKeyRef?: {
				// The key to select.
				key: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// TODO: Add other useful fields. apiVersion, kind, uid?
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Drop `kubebuilder:default` when controller-gen doesn't
				// need it
				// https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
				name?: string | *""

				// Specify whether the ConfigMap or its key must be defined
				optional?: bool
			}

			// Selects a key of a Secret.
			secretKeyRef?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// TODO: Add other useful fields. apiVersion, kind, uid?
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Drop `kubebuilder:default` when controller-gen doesn't
				// need it
				// https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
				name?: string | *""

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}
	}]
}
