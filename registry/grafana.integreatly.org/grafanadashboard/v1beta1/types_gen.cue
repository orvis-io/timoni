// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni vendor crd -f crds.yaml

package v1beta1

import "strings"

// GrafanaDashboard is the Schema for the grafanadashboards API
#GrafanaDashboard: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "grafana.integreatly.org/v1beta1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "GrafanaDashboard"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// GrafanaDashboardSpec defines the desired state of
	// GrafanaDashboard
	spec!: #GrafanaDashboardSpec
}

// GrafanaDashboardSpec defines the desired state of
// GrafanaDashboard
#GrafanaDashboardSpec: {
	// allow to import this resources from an operator in a different
	// namespace
	allowCrossNamespaceImport?: bool

	// dashboard from configmap
	configMapRef?: {
		// The key to select.
		key: string

		// Name of the referent.
		// This field is effectively required, but due to backwards
		// compatibility is
		// allowed to be empty. Instances of this type with an empty value
		// here are
		// almost certainly wrong.
		// TODO: Add other useful fields. apiVersion, kind, uid?
		// More info:
		// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
		// TODO: Drop `kubebuilder:default` when controller-gen doesn't
		// need it
		// https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
		name?: string | *""

		// Specify whether the ConfigMap or its key must be defined
		optional?: bool
	}

	// Cache duration for dashboards fetched from URLs
	contentCacheDuration?: string

	// maps required data sources to existing ones
	datasources?: [...{
		datasourceName: string
		inputName:      string
	}]

	// environments variables from secrets or config maps
	envFrom?: [...{
		// Selects a key of a ConfigMap.
		configMapKeyRef?: {
			// The key to select.
			key: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// TODO: Add other useful fields. apiVersion, kind, uid?
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Drop `kubebuilder:default` when controller-gen doesn't
			// need it
			// https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
			name?: string | *""

			// Specify whether the ConfigMap or its key must be defined
			optional?: bool
		}

		// Selects a key of a Secret.
		secretKeyRef?: {
			// The key of the secret to select from. Must be a valid secret
			// key.
			key: string

			// Name of the referent.
			// This field is effectively required, but due to backwards
			// compatibility is
			// allowed to be empty. Instances of this type with an empty value
			// here are
			// almost certainly wrong.
			// TODO: Add other useful fields. apiVersion, kind, uid?
			// More info:
			// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
			// TODO: Drop `kubebuilder:default` when controller-gen doesn't
			// need it
			// https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
			name?: string | *""

			// Specify whether the Secret or its key must be defined
			optional?: bool
		}
	}]

	// environments variables as a map
	envs?: [...{
		name: string

		// Inline evn value
		value?: string

		// Reference on value source, might be the reference on a secret
		// or config map
		valueFrom?: {
			// Selects a key of a ConfigMap.
			configMapKeyRef?: {
				// The key to select.
				key: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// TODO: Add other useful fields. apiVersion, kind, uid?
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Drop `kubebuilder:default` when controller-gen doesn't
				// need it
				// https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
				name?: string | *""

				// Specify whether the ConfigMap or its key must be defined
				optional?: bool
			}

			// Selects a key of a Secret.
			secretKeyRef?: {
				// The key of the secret to select from. Must be a valid secret
				// key.
				key: string

				// Name of the referent.
				// This field is effectively required, but due to backwards
				// compatibility is
				// allowed to be empty. Instances of this type with an empty value
				// here are
				// almost certainly wrong.
				// TODO: Add other useful fields. apiVersion, kind, uid?
				// More info:
				// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
				// TODO: Drop `kubebuilder:default` when controller-gen doesn't
				// need it
				// https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
				name?: string | *""

				// Specify whether the Secret or its key must be defined
				optional?: bool
			}
		}
	}]

	// folder assignment for dashboard
	folder?: string

	// Name of a `GrafanaFolder` resource in the same namespace
	folderRef?: string

	// UID of the target folder for this dashboard
	folderUID?: string

	// grafana.com/dashboards
	grafanaCom?: {
		id:        int
		revision?: int
	}

	// GzipJson the dashboard's JSON compressed with Gzip.
	// Base64-encoded when in YAML.
	gzipJson?: string

	// selects Grafanas for import
	instanceSelector: {
		// matchExpressions is a list of label selector requirements. The
		// requirements are ANDed.
		matchExpressions?: [...{
			// key is the label key that the selector applies to.
			key: string

			// operator represents a key's relationship to a set of values.
			// Valid operators are In, NotIn, Exists and DoesNotExist.
			operator: string

			// values is an array of string values. If the operator is In or
			// NotIn,
			// the values array must be non-empty. If the operator is Exists
			// or DoesNotExist,
			// the values array must be empty. This array is replaced during a
			// strategic
			// merge patch.
			values?: [...string]
		}]

		// matchLabels is a map of {key,value} pairs. A single {key,value}
		// in the matchLabels
		// map is equivalent to an element of matchExpressions, whose key
		// field is "key", the
		// operator is "In", and the values array contains only "value".
		// The requirements are ANDed.
		matchLabels?: {
			[string]: string
		}
	}

	// dashboard json
	json?: string

	// Jsonnet
	jsonnet?: string

	// Jsonnet project build
	jsonnetLib?: {
		fileName:           string
		gzipJsonnetProject: string
		jPath?: [...string]
	}

	// plugins
	plugins?: [...{
		name:    string
		version: string
	}]

	// how often the dashboard is refreshed, defaults to 5m if not set
	resyncPeriod?: =~"^([0-9]+(\\.[0-9]+)?(ns|us|Âµs|ms|s|m|h))+$" | *"5m"

	// dashboard url
	url?: string
}
